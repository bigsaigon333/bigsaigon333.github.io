{"pageProps":{"postData":{"id":"undefined-in-react-ts","contentHtml":"<p>undefined와 null의 차이는 매우 많다.</p>\n<p>모던 웹앱에서 undefined의 쓰임새는 극히 제한된다.\nlet으로 선언한 변수에 초기값을 할당하지 않은 경우, undefined로 초기화되지만,\n모던 웹앱에서는 대부분의 변수를 const로 선언하여 불변값으로 유지하기 때문에 undefined로 초기화되는 let 선언 변수는 안티패턴으로 간주되어 거의 볼 수 없다.</p>\n<p>리액트에서도 마찬가지이다. 상태는 변경할 수 있으나, 상태의 초기값을 undefined로 하는 경우는 극히 드물다. react-query 같은 경우 useQuery의 data 값의 초기값이 undefined로, idle 상태의 값을 undefined로 나타낸다</p>\n<p>그러나 의외로 undefined를 명시적으로 할당하는 경우가 프로젝트에서 꽤 있는데, 대표적으로 두가지의 이유 때문이라고 할 수 있다.</p>\n<h3>1. 객체를 JSON 직렬화 시 undefined 값을 가진 프로퍼티를 제거하기 위해</h3>\n<p>JSON의 정의에는 undefined는 없다. 따라서 <code>JSON.stringify(undefined)</code>는 undefined 이다. 이는 <code>JSON.stringify()</code> 와 같은 결과로서, 직렬화 할 대상이 없어서 결과값도 없다는 의미이다.</p>\n<p><code>JSON.stringfy({a: undefined})</code>를 하면 a 속성은 제거되어 <code>{}</code> 가 반환된다.</p>\n<p>서버에 ajax 통신으로 post 요청을 보내는 경우, body에 보낼 payload에 어떤 속성이 optional인 경우, 자주 사용하게 된다.</p>\n<p>optional이라는 경우</p>","title":"타입스크립트에서 undefined의 쓰임새","date":"2022-06-26"}},"__N_SSG":true}