{"pageProps":{"postData":{"id":"draft:safari-on-ios-fastclick","contentHtml":"<h2>I. 문제점</h2>\n<p>iOS 13 버젼 이상의 모바일 웹브라우저에서 서로 다른 곳(A, B)에 클릭 이벤트 핸들러를 설정한 후 A,B를 빠르게 터치하는 경우,\nA, B의 클릭 이벤트 핸들러가 순차적으로 실행되는 것이 아니라 A의 클릭 이벤트 핸들러가 두번 실행되는 문제가 발생하였다.</p>\n<p>실행되는 클릭 이벤트 핸들러의 이벤트 객체를 살펴본 결과, <code>event.clientX</code>, <code>event.clientY</code>자체가 A의 위치로 보정되어 있었다.</p>\n<h3>실행환경</h3>\n<ul>\n<li>React: 17.0.2</li>\n<li>iOS: 13버젼 이상</li>\n<li>브라우저: 웹뷰, 사파리, 크롬</li>\n</ul>\n<h2>II. 의문점</h2>\n<h3>1. 리액트의 문제인가?</h3>\n<p>리액트와 같이 프레임워크를 사용하지 않고 순수 html인 <code>input[type=checkbox]</code>으로 구성된 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#handling_multiple_checkboxes\">사이트</a>를 모바일에서 테스트해본 결과, 클릭 이벤트의 좌표가 보정되는 문제는 발생하지 않았다.</p>\n<p>또한 '캐치테이블' 이라는 타사 서비스에서도 동일한 문제가 재현된다는 것을 발견하였는데, 해당 서비스와의 유사성은 오직 리액트를 사용하고 있다는 점 뿐이었다.</p>\n<h3>2. 터치 이벤트는 보정되지 않고, 클릭 이벤트만 보정되는 것인가?</h3>\n<p>터치가 가능한 디바이스에서 터치 이벤트와 클릭 이벤트의 발생 순서는 다음과 같다.</p>\n<pre><code class=\"hljs language-arduino\">touchstart\n    ⬇\ntouchmove\n    ⬇\ntouchend\n    ⬇\nmousemove\n    ⬇\n mouseup\n    ⬇\n  click\n</code></pre>\n<blockquote>\n<p><a href=\"https://w3c.github.io/touch-events/#mouse-events\">https://w3c.github.io/touch-events/#mouse-events</a></p>\n</blockquote>\n<p>터치 이벤트 핸들러를 부착하여 테스트해본 결과, touchstart, touchmove, touchend 이벤트와 같은 터치 이벤트에서는 좌표 보정이 일어나지 않았다.</p>\n<h2>III. 원인</h2>\n<h3>1. dblclick 이벤트 핸들러가 설정되어 있으면 iOS에서 MouseEvent의 좌표 값을 보정한다</h3>\n<p>II. 1의 순수 html <code>input[type=checkbox]</code>의 경우에도 dblclick 이벤트 핸들러를 부착한 경우에는 클릭 이벤트의 좌표 보정이 발생하였다.</p>\n<p>따라서 dblclick 이벤트 핸들러가 부착된 요소 주위를 두 번 터치하면, 해당 요소가 두 번 클릭한 것처럼 iOS에서 클릭 이벤트의 좌표를 자동으로 보정해주는 것으로 추정된다.</p>\n<h3>2. 리액트의 루트 엘리먼트는 모든 이벤트 핸들러를 등록하고 있다</h3>\n<p>내가 만든 화면의 어느 곳에서도 dblclick 이벤트 핸들러를 등록하지 않았다.</p>\n<p>하지만 리액트는 루트 엘리먼트에 모든 이벤트 핸들러를 등록한다. 실제로 이벤트가 발생하는 경우, 버블링 된 native 이벤트를 캐치한 후 이를 Synthetic Event로 래핑한 후에 이벤트를 다시 발생시킨다.</p>\n<p>따라서 리액트를 사용하는 이상 쵝상단 루트 엘리먼트에 항상 dblclick 이벤트 핸들러가 등록되어 있으므로, 루트 엘리먼트의 자손에게 클릭 이벤트의 좌표 보정이 항상 발생하게 된다.</p>\n<h2>IV. 해결방법</h2>\n<h3>1안. click 이벤트 핸들러를 사용하지 않는다</h3>\n<p>change 이벤트 핸들러를 사용한다. 내가 사용한 체크박스 컴포넌트는 사실 div 로 구성되어 있고, 여기에 click 이벤트 핸들러를 부착한 형태였다. 따라서 이를 <code>input[type=checkbox]</code>로 변경하고 change 이벤트 핸들러로 제어한다면 문제가 없다.\n하지만, 해당 체크박스 컴포넌트는 이미 굉장히 다양한 곳에서 사용되고 있어서 이를 수정하면 발생할지도 모르는 수많은 사이드 이펙트가 염려되어 실제로 변경은 하지 못하였다.</p>\n<h3>2안. 터치 이벤트만 사용한다</h3>\n<p>click 이벤트 핸들러가 아니라 <code>touchstart</code> 또는 <code>touchend</code> 이벤트 핸들러를 사용한다. 하지만 이는 웹접근성 측면에서 좋지 않은 것으로 판단되었다. (기존에도 키보드에 대응하지 않고 있어서 그리 웹접근성이 좋았던 건 아니지만...)</p>\n<h3>최종채택안. 터치 이벤트 핸들러와 클릭 이벤트 핸들러를 모두 사용하되, 터치 이벤트 이후의 클릭 이벤트가 발생되지 않도록 한다</h3>\n<p>touchend 이벤트 핸들러에서 <code>event.preventDefault()</code>를 호출하여 터치 이벤트 후에 발생하는 클릭 이벤트를 취소할 수 있씁니다.</p>\n<blockquote>\n<p>If, however, either the touchstart, touchmove or touchend event has been canceled during this interaction, no mouse or click events will be fired, and the resulting sequence of events would simply be:</p>\n<ol>\n<li>touchstart</li>\n<li>Zero or more touchmove events, depending on movement of the finger</li>\n<li>touchend</li>\n</ol>\n<p><a href=\"https://w3c.github.io/touch-events/#mouse-events\">https://w3c.github.io/touch-events/#mouse-events</a></p>\n</blockquote>\n<!-- - stopImmediatePropagation / stopPropagation / preventDefault\n- innerHTML 로 script 태그를 생성하면 src 를 로드하지 않는다?\n- 환경변수:\n  다국어: 기능과 상관없는 디스플레이 등 -->","title":"safari on iOS 에서 빠르게 두번 터치하는 경우 click event 좌표 보정 이슈","date":"2022-06-30"}},"__N_SSG":true}