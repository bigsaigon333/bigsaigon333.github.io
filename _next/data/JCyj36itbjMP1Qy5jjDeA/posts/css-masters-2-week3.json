{"pageProps":{"postData":{"id":"css-masters-2-week3","contentHtml":"<p><a href=\"https://github.com/fe-backpackers/css-masters-2\">css-masters-2</a> 라는 이름으로 css 스터디를 하고 있습니다.</p>\n<p>모던 웹을 위한 HTML5 + CSS3 바이블 3판을 매주 정해진 분량만큼 읽고 의견을 공유하는 방식입니다.</p>\n<p>아래는 3주차에 학습한 내용 등을 정리한 것입니다.</p>\n<hr>\n<h2>타일 형태의 웹 페이지 레이아웃</h2>\n<p>핀터레스트에서 볼 수 있는 타일 형태의 레이아웃(cascading grid layout)은 자바스크립트 없이 css로만 구현할 수 없습니다. Masonry 와 같은 라이브러리를 사용하면 쉽게 만들 수 있습니다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/31029000/169675017-bcfb2ea9-3566-4262-9f82-4868e4b9da6c.png\" alt=\"image\"></p>\n<h3>Reference</h3>\n<p><a href=\"https://github.com/desandro/masonry\">https://github.com/desandro/masonry</a></p>\n<h2>viewport meta 태그</h2>\n<ul>\n<li>\n<p>meta태그는 웹 브라우저에 특별한 정보를 제공하는 HTML 태그입니다.</p>\n</li>\n<li>\n<p>모바일 웹 페이지는 화면에 대한 특별한 정보를 제공하기 위해 viewport meta 태그를 사용합니다.</p>\n</li>\n<li>\n<p>Long long time ago, 작은 스크린을 가진 모바일 디바이스는 가상의 뷰포트에 페이지를 렌더한 다음에 실제 뷰포트에 맞게 이를 줄여서 사용자에게 보여주었기 때문에, 많은 페이지가 모바일에 최적화되지 않았습니다.</p>\n</li>\n<li>\n<p>작은 스크린을 가진 모바일 디바이스의 가상 뷰포트 문제를 완화하기 위해, 애플은 사파리 iOS에 뷰포트 메타 태그(viewport meta tag)를 도입하여 웹 개발자가 뷰포트의 크기와 규모를 제어할 수 있게 하였습니다.</p>\n</li>\n<li>\n<p>현재 대부분의 많은 모바일 브라우저가 이 태그를 지원하지만 아직 웹 표준의 일부는 아닙니다.</p>\n</li>\n</ul>\n<h3>Reference</h3>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag\">https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag</a>\n<a href=\"https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html\">https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html</a>\n<a href=\"https://developers.google.com/search/docs/advanced/crawling/special-tags\">https://developers.google.com/search/docs/advanced/crawling/special-tags</a>\n<a href=\"https://developer.android.com/guide/webapps/targeting\">https://developer.android.com/guide/webapps/targeting</a></p>\n<h2>header 요소</h2>\n<ul>\n<li>\n<p>header 요소는 일반적으로 섹션의 제목(h1-h6 요소 또는 hgroup 요소)을 포함하도록 의도되지만, 이는 필수적이지 않습니다. header 요소는 섹션의 목차, 검색 양식 또는 관련 로고를 줄 바꿈하는 데 사용할 수도 있습니다.</p>\n</li>\n<li>\n<p>header 요소는 sectioning content가 아니기 때문에 새로운 section을 만들지 않습니다.</p>\n</li>\n<li>\n<p>header 요소의 자식으로는 header와 footer를 제외한 Flow content가 올 수 있습니다.</p>\n</li>\n</ul>\n<h3>Reference</h3>\n<p><a href=\"https://html.spec.whatwg.org/#the-header-element\">https://html.spec.whatwg.org/#the-header-element</a></p>\n<h2>h1, h2, h3, h4, h5, h6 요소: 헤딩 요소</h2>\n<ul>\n<li>\n<p>h1는 가장 순위가 높고, h6 은 가장 순위가 낮습니다. 동일한 이름의 두 요소는 같은 순위를 갖습니다.</p>\n</li>\n<li>\n<p>섹션은 어떤 순위의 헤딩 요소를 포함할 수 있습니다. 하지만, 섹션 내에서는 단 하나의 h1 요소만을 사용할 것이 강하게 권장됩니다.</p>\n</li>\n<li>\n<p>아래의 두 html은 시멘틱의 관점에서 동일합니다. 다만 예제2는 구형 접근성 도구 및 구형 브라우저의 스타일링에서 원하는 대로 동작하지 않을 수 있습니다.</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- 예제 1 --></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Apples<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Apples are fruit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Taste<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>They taste lovely.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h3</span>></span>Sweet<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h3</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Red apples are sweeter than green ones.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h2</span>></span>Color<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h2</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Apples come in various colors.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n</code></pre>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&#x3C;!-- 예제 2 --></span>\n<span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Apples<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Apples are fruit.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Taste<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>They taste lovely.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Sweet<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n      <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Red apples are sweeter than green ones.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">section</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>Color<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">p</span>></span>Apples come in various colors.<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">p</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">section</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n</code></pre>\n<h3>Reference</h3>\n<p><a href=\"https://html.spec.whatwg.org/#headings-and-sections\">https://html.spec.whatwg.org/#headings-and-sections</a></p>\n<h2>vertical-align</h2>\n<ul>\n<li>\n<p><code>vertical-align</code> CSS 속성은 inline, inline-block, table-cell 박스의 세로 정렬을 설정합니다.</p>\n</li>\n<li>\n<p>p392 의 img 요소 사이의 공간을 제거하기 위해서 display 속성을 block을 적용하지 않고, <code>vertical-align: bottom;</code>과 같이 설정할 수도 있습니다.</p>\n</li>\n</ul>\n<h3>Reference</h3>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align#vertical_alignment_in_a_line_box\">https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align#vertical_alignment_in_a_line_box</a></p>\n<h2>Visually Hidden</h2>\n<ul>\n<li>\n<p>렌더 트리에는 요소를 포함시키지만 시각적으로는 감추고 싶을 때가 있습니다.</p>\n</li>\n<li>\n<p>이럴 때 사용하는 기법을 IR 기법이라고 통칭합니다.</p>\n</li>\n<li>\n<p>웹접근성, 성능 측면에서 권장하는 기법이 달라지고 있습니다.</p>\n</li>\n<li>\n<p><code>text-indent</code> 속성은 text-indent 스타일 속성이 적용된 요소가 많을 때\n컴퓨터가 웹페이지 로드 시 위치 값을 그만큼 많이 계산해 하므로 성능에 저하를 불러올 수 있습니다.</p>\n</li>\n<li>\n<p>최근에 많이 사용되는 IR기법은 다음과 같습니다.</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.visually-hidden</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">margin</span>: -<span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n  <span class=\"hljs-attribute\">clip</span>: <span class=\"hljs-built_in\">rect</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>);\n  <span class=\"hljs-attribute\">white-space</span>: nowrap;\n  <span class=\"hljs-attribute\">border-width</span>: <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n<p>※ <strong>참고</strong></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* 투명도를 0으로 주는 것과 동일하게 화면에서 사라지지만, 스크린 리더 인식 안함 */</span>\n<span class=\"hljs-attribute\">visibility</span>: hidden;\n\n<span class=\"hljs-comment\">/* 요소가 아예 없는 것으로 인식 */</span>\n<span class=\"hljs-attribute\">display</span>: none;\n\n<span class=\"hljs-comment\">/* 요소의 사이즈를 0으로 만들면 스크린 리더 인식 안함 */</span>\n<span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">0</span>;\n</code></pre>\n<h3>Reference</h3>\n<ul>\n<li>IR기법: <a href=\"https://m.blog.naver.com/eirene100999/221686480420\">https://m.blog.naver.com/eirene100999/221686480420</a></li>\n<li>CSS Triggers: <a href=\"https://csstriggers.com/\">https://csstriggers.com/</a></li>\n</ul>\n<h2>요소에 height: 100% 를 적용하여 화면을 꽉 채우고 싶을 때</h2>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">html</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">style</span>></span><span class=\"css\">\n    <span class=\"hljs-selector-tag\">html</span>,\n    <span class=\"hljs-selector-tag\">body</span> {\n      <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n    }\n\n    <span class=\"hljs-selector-id\">#content</span> {\n      <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n      <span class=\"hljs-attribute\">background</span>: red;\n    }\n  </span><span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">style</span>></span>\n  <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">body</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"content\"</span>></span>Hello World<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">body</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">html</span>></span>\n</code></pre>\n<ul>\n<li>\n<p>브라우저는 body 요소의 height를 window의 높이와 같게끔 합니다. body 요소의 자식 요소가 window의 높이보다 큰 경우에 문제가 됩니다.</p>\n</li>\n<li>\n<p>데스크톱에서는 문제가 없지만, 일부 모바일 디바이스에서는 스크롤링 이슈를 야기할 수 있습니다.</p>\n</li>\n<li>\n<p>따라서 body 요소에 <code>min-height</code> 속성을 추가하는 것이 더 나은 방법입니다.</p>\n</li>\n</ul>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">min-height</span>: <span class=\"hljs-number\">100vh</span>;\n}\n</code></pre>\n<h3>Reference</h3>\n<p><a href=\"https://greggod.medium.com/css-do-not-put-height-100-on-the-body-html-e36bda3551b3\">https://greggod.medium.com/css-do-not-put-height-100-on-the-body-html-e36bda3551b3</a></p>","title":"css-masters-2 3주차 정리","date":"2022-05-22T00:00:00.000Z","description":"","keywords":[]},"_superjson":{"values":{"postData.date":["Date"]}}},"__N_SSG":true}