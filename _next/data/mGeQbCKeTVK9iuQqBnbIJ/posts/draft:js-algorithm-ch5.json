{"pageProps":{"postData":{"id":"draft:js-algorithm-ch5","contentHtml":"<h2>5-1. 스택이란?</h2>\n<h3>스택의 용도</h3>\n<ul>\n<li>임시 데이터를 처리할 수 있는 간결한 도구</li>\n<li>임시 데이터를 처리하되 데이터를 처리하는 순서에 특히 중점을 둔다</li>\n</ul>\n<h3>스택의 제약</h3>\n<ul>\n<li>스택의 끝에만 삽입할 수 있다</li>\n<li>스택의 끝에서만 삭제할 수 있다</li>\n<li>스택의 마지막 원소만 읽을 수 있다.</li>\n</ul>\n<h4>스택의 예시: 접시 더미</h4>\n<ul>\n<li>젤 위에 새로운 접시를 새로 얹을 수 있다</li>\n<li>젤 위에 있는 접시만 꺼낼 수 있다.</li>\n<li>젤 위에 있는 접시만 윗면을 확인할 수 있다.</li>\n</ul>\n<h3>스택의 연산</h3>\n<ul>\n<li>push: 스택의 끝에 데이터를 삽입. 접시 더미 위에 접시를 얹는 것</li>\n<li>pop: 스택의 끝의 데이터를 삭제. 접시 더미 제일 위의 접시를 꺼낸다</li>\n<li>top: 스택의 끝의 데이터를 확인. 접시 더미 제일 위의 접시가 어떤 건지 확인</li>\n</ul>\n<p>⇒ Last In,First Out(LIFO): 스택에 가장 마지막에 푸시된 데이터가 가장 먼저 팝된다는 의미.</p>\n<h2>5-2. 스택 in JS</h2>\n<ul>\n<li>\n<p>JS의 내장 데이터 타입에 스택이 존재하지 않는다. (배열과는 다르게...)</p>\n</li>\n<li>\n<p>스택의 push, pop, top 의 메서드를 가지는 자료구조를 직접 구현하여야 한다.</p>\n</li>\n<li>\n<p>그러나... 코딩테스트 문제 풀 시간도 부족한데 스택 자료구조가 필요하다고 해서 그걸 바닥부터 어떻게 짜고 있느냐?</p>\n</li>\n<li>\n<p>배열을 이용하면 스택의 모든 연산을 다 수행할 수 있다.</p>\n<p>스택은 <code>[0, s.length)</code> 인 배열이다.</p>\n<pre><code>const s = [];\n\n// push: 스택의 끝에 원소를 추가\n\ns.push(3); // 1\n\n// pop: 스택의 끝의 원소를 삭제\n\ns.pop(); // 3\n\n// top: 스택의 끝의 원소에 접근\n\ns[s.length - 1]; // undefined. 조심해야 한다! 0개일 때...\n</code></pre>\n</li>\n</ul>\n<h3>요약</h3>\n<ul>\n<li>스택은 마지막에 들어 온 데이터부터 먼저 처리해야 할 때 이상적</li>\n<li>오래 사용할 데이터를 저장할 때는 일반적으로 스택을 사용하지 않지만, 임시 데이터를 다뤄야 할 때는 유용하다</li>\n</ul>\n<h2>5-3. 문제풀이</h2>\n<ul>\n<li>기본 문제: <a href=\"https://www.acmicpc.net/problem/10828\">https://www.acmicpc.net/problem/10828</a></li>\n</ul>\n<p>https://www.acmicpc.net/problem/10773</p>\n<p>https://www.acmicpc.net/problem/9012</p>\n<p>https://www.acmicpc.net/problem/4949</p>\n<p>https://www.acmicpc.net/problem/1874</p>\n<ul>\n<li>응용 문제: <a href=\"https://www.acmicpc.net/problem/17298\">https://www.acmicpc.net/problem/17298</a>\n<ul>\n<li>배열을 순회할 때 스택을 쓰고, 한번 pop 한 데이터를 다시 pop 하지 않으면 O(N)으로 순회. 오름차순 / 내림차순일 때 편리</li>\n<li>내림차순으로 쌓으면 다음 으로 큰 값이 뭔지 바로 확정이 되지 않기 때문에, 역순으로 오름차순으로 쌓는게 편리하다</li>\n<li>JS 특성상 배열의 크기를 선언안해도 된다</li>\n<li>밑에 깔리면 알 수가 없다. ⇒ 가장 가까운이라는 키워드를 보면 먼거를 먼저 넣고 가까운 걸 나중에 넣게끔 설계</li>\n<li>동일한 유형의 문제: https://www.acmicpc.net/problem/17299\n<ul>\n<li><a href=\"https://www.acmicpc.net/source/29730129\">https://www.acmicpc.net/source/29730129</a></li>\n<li>앞에서부터 내림차순으로 쌓고, 확정이 되면 그때 답을 정한다</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","title":"Ch05. 스택","date":"2020-03-13","summary":"스택"}},"__N_SSG":true}